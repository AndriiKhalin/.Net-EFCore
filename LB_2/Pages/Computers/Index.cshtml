@page
@model LB_2.Pages.Computers.IndexModel

<form method="get" class="d-flex">
    <div class=" input-group mb-3 w-25 ms-md-auto">
        <input type="text" class="form-control" placeholder="Search by name" aria-label="Search" aria-describedby="button-addon2" name="SearchString" value="@Model.SearchString">
        <button class="btn btn-outline-secondary" type="submit" id="button-addon2">
            <i class="fas fa-search" aria-hidden="true"></i>
        </button>

    </div> 
    <a asp-page="Index" class="text-decoration-none ms-lg-2 h-25  text-white btn btn-primary ">Full List</a>
</form>

<p>
    <a asp-page="Create" class="text-decoration-none  text-white btn btn-primary">Create New</a>
</p>
<table class="table table-responsive table-bordered table-hover">
    <thead>
        <tr class="table-active text-center">
            <th style="cursor: pointer">
                <a asp-page="Index" asp-route-sortOrder="@Model.IdSort" asp-route-searchString="@Model.SearchString"  asp-route-pageIndex="@(Model.CurrentPage)" class="text-decoration-none  text-dark">
            @Html.DisplayNameFor(model => model.Computer[0].Id)
                </a>
        </th>
            <th style="cursor: pointer">
                <a asp-page="Index" asp-route-sortOrder="@Model.NameSort" asp-route-searchString="@Model.SearchString"  asp-route-pageIndex="@(Model.CurrentPage)" class="text-decoration-none  text-dark">
            @Html.DisplayNameFor(model => model.Computer[0].Name)
                </a>
        </th>
        @* <th>
            @Html.DisplayNameFor(model => model.Processor[0].Image)
        </th> *@
        <th>
            @Html.DisplayNameFor(model => model.Computer[0].CreatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Computer[0].LastUpdatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Computer[0].ComponentComputerId)
        </th>
        <th style="cursor: pointer">
            <a asp-page="Index" asp-route-sortOrder="@Model.PriceSort" asp-route-searchString="@Model.SearchString"  asp-route-pageIndex="@(Model.CurrentPage)" class="text-decoration-none  text-dark">
            @Html.DisplayNameFor(model => model.Computer[0].Price)
            </a>
        </th>
        <th>
            Actions
        </th>
    </tr>
    </thead>
    <tbody>
    
    @if (Model.Computer != null && Model.Computer.Any())
    {
        @foreach (var item in Model.Computer)
        {
            <tr class="text-center">
                <td>
                        @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ComponentComputerId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <div>
                            <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">Edit</a> 
                            <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Details</a> 
                            <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                    </div>
                   
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="4">
                <div>No Computer avaialble at this moment! </div>
            </td>
        </tr>
    }
    </tbody>
</table>


@{
    var prevDisabled = !Model.PaginateViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PaginateViewModel.HasNextPage ? "disabled" : "";
    var firstDisabled = Model.PaginateViewModel.PageIndex == 1 ? "disabled" : "";
    var lastDisabled = Model.PaginateViewModel.PageIndex == Model.PaginateViewModel.TotalPages
        ? "disabled" : "";
}


<nav>
    <ul class="pagination">
        <a asp-page="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-searchString="@Model.SearchString"
           asp-route-pageIndex="1"
           class="btn page-link @firstDisabled" aria-label="First">
            @* <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span> *@
            First
        </a>

        <a asp-page="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageIndex="@(Model.PaginateViewModel.PageIndex - 1)"
           asp-route-searchString="@Model.SearchString"
           class=" btn btn-primary  @prevDisabled">
            @* <span aria-hidden="true">&lsaquo;</span>
            <span class="sr-only">Previous</span> *@
            Prev
        </a>
        @if (Model.CurrentPage - 1 > 1)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }

        @for (int i = Math.Max(1, Model.pageIndex - 1); i <= Math.Min(Model.pageIndex + 1, Model.totalPages); i++)
        {
            string active = "";
            if (i == Model.pageIndex) active = "active";

            <li class="page-item @active" aria-current="page">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@(i)" asp-route-searchString="@Model.SearchString" asp-route-sortOrder="@Model.CurrentSort">@i</a>
            </li>
        }


        @if (Model.CurrentPage + 1 < Model.totalPages)
        {
            <li class="page-item disabled">
                <span class="page-link">...</span>
            </li>
        }



        <a asp-page="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-pageIndex="@(Model.PaginateViewModel.PageIndex + 1)"
           asp-route-searchString="@Model.SearchString"
           class="btn btn-primary  @nextDisabled">
            @* <span aria-hidden="true">&rsaquo;</span>
            <span class="sr-only">Previous</span> *@
            Next
        </a>

        <a asp-page="Index"
           asp-route-sortOrder="@Model.CurrentSort"
           asp-route-searchString="@Model.SearchString"
           asp-route-pageIndex="@Model.PaginateViewModel.TotalPages"
           class="btn  page-link @lastDisabled" aria-label="Last">
            @* <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Previous</span> *@
            Last
        </a>
    </ul>
</nav>

